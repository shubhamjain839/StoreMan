/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package storeman;

import java.awt.event.KeyEvent;
import java.awt.print.PrinterException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shubh
 */
public class MainFrame extends javax.swing.JFrame {

    public MainFrame() {
        initComponents();
        fillCategoryComboBox();
        AddProductPanel.setVisible(false);
        ModifyProductPanel.setVisible(false);
        AddItemInventoryPanel.setVisible(false);
        btnBillAddItem.setEnabled(false);
    }

    private void fillCategoryComboBox() {

        try {
            ResultSet re = SQLQueries.fillCategory();
            while (re.next()) {
                //System.out.println("hello");
                comboBoxCategory.addItem(re.getString(1));
                comboBoxCategoryModify.addItem(re.getString(1));
                comboBoxCategoryAddItem.addItem(re.getString(1));
                comboBoxShowInventory.addItem(re.getString(1));
                comboBoxBillCategoryName.addItem(re.getString(1));
            }
        } catch (SQLException s) {
            System.out.print(s.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BillingMenu = new javax.swing.JDialog();
        BillPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBill = new javax.swing.JTable();
        labelBillCategoryName = new javax.swing.JLabel();
        comboBoxBillCategoryName = new javax.swing.JComboBox<>();
        labelBillProductName = new javax.swing.JLabel();
        comboBoxBillProductName = new javax.swing.JComboBox<>();
        labelBillQuantity = new javax.swing.JLabel();
        txtBillQuantitySpinner = new javax.swing.JSpinner();
        labelBillPrice = new javax.swing.JLabel();
        txtBillPrice = new javax.swing.JTextField();
        labelBillAmount = new javax.swing.JLabel();
        txtBillAmount = new javax.swing.JTextField();
        btnBillAddItem = new javax.swing.JButton();
        btnBillPrint = new javax.swing.JButton();
        txtBillTotalAmount = new javax.swing.JTextField();
        labelBillTotalAmount = new javax.swing.JLabel();
        labelCustomerName = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        labelPaymentMode = new javax.swing.JLabel();
        comboBoxSelectPayment = new javax.swing.JComboBox<>();
        labelErrorNotMuchQuantity = new javax.swing.JLabel();
        btnDeleteItemFromBill = new javax.swing.JButton();
        PrintMenu = new javax.swing.JDialog();
        PrintPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaBillPreview = new javax.swing.JTextArea();
        btnPrintBillPreview = new javax.swing.JButton();
        ChangePassword = new javax.swing.JDialog();
        ChangePasswordPanel = new javax.swing.JPanel();
        labelOldPassword = new javax.swing.JLabel();
        labelNewPassword = new javax.swing.JLabel();
        labelConfirmPassword = new javax.swing.JLabel();
        txtOldPassword = new javax.swing.JPasswordField();
        txtNewPassword = new javax.swing.JPasswordField();
        txtConfirmPassword = new javax.swing.JTextField();
        btnChangeNewPassword = new javax.swing.JButton();
        btnCancelNewPassword = new javax.swing.JButton();
        labelErrorOldPassword = new javax.swing.JLabel();
        labelErrorNewPassword = new javax.swing.JLabel();
        labelErrorConfirmPassword = new javax.swing.JLabel();
        labelErrorChangePassword = new javax.swing.JLabel();
        AddNewUser = new javax.swing.JDialog();
        AddNewUserPanel = new javax.swing.JPanel();
        lableNewUserName = new javax.swing.JLabel();
        labelNewUserPassword = new javax.swing.JLabel();
        labelNewUserConfirmPassword = new javax.swing.JLabel();
        txtNewUserName = new javax.swing.JTextField();
        labelNewUserContactNumber = new javax.swing.JLabel();
        txtNewUserContact = new javax.swing.JTextField();
        txtNewUserPassword = new javax.swing.JPasswordField();
        txtNewUserConfirmPassword = new javax.swing.JTextField();
        btnAddUser = new javax.swing.JButton();
        btnAddUserCancel = new javax.swing.JButton();
        labelErrorAddNewUser = new javax.swing.JLabel();
        labelErrorConfirmPassAddUser = new javax.swing.JLabel();
        RemoveUser = new javax.swing.JDialog();
        RemoveUserPanel = new javax.swing.JPanel();
        labelSelectUserRemove = new javax.swing.JLabel();
        comboBoxUserList = new javax.swing.JComboBox<>();
        btnRemoveUserGo = new javax.swing.JButton();
        btnRemoveUserCancel = new javax.swing.JButton();
        ShowInvoices = new javax.swing.JDialog();
        ShowInvoicePanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableInvoices = new javax.swing.JTable();
        DeveloperInfo = new javax.swing.JDialog();
        DeveloperInfoPanel = new javax.swing.JPanel();
        labelDeveloperName = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        textAreaDeveloperInformation = new javax.swing.JTextArea();
        LoginPage = new javax.swing.JPanel();
        labelLogo = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        labelLogin = new javax.swing.JLabel();
        txtLoginName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        labelErrorLogin = new javax.swing.JLabel();
        HomePage = new javax.swing.JPanel();
        TabbedPane = new javax.swing.JTabbedPane();
        WelcomePanel = new javax.swing.JPanel();
        labelLogoWelcome = new javax.swing.JLabel();
        labelUserName = new javax.swing.JLabel();
        AccountSetting = new javax.swing.JPanel();
        btnChangePassword = new javax.swing.JButton();
        btnAddNewUser = new javax.swing.JButton();
        btnRemoveUser = new javax.swing.JButton();
        Billing = new javax.swing.JPanel();
        btnNewBill = new javax.swing.JButton();
        btnShowInvoices = new javax.swing.JButton();
        InventoryOverview = new javax.swing.JPanel();
        labelTotalItem = new javax.swing.JLabel();
        txtTotalItem = new javax.swing.JTextField();
        txtTotalItem.setHorizontalAlignment(JTextField.CENTER);
        labelTotalCategories = new javax.swing.JLabel();
        txtTotalCategoies = new javax.swing.JTextField();
        txtTotalCategoies.setHorizontalAlignment(JTextField.CENTER);
        labelInventoryValue = new javax.swing.JLabel();
        txtInventoryalue = new javax.swing.JTextField();
        txtInventoryalue.setHorizontalAlignment(JTextField.CENTER);
        labelTotalProduct = new javax.swing.JLabel();
        txtTotalProduct = new javax.swing.JTextField();
        txtTotalProduct.setHorizontalAlignment(JTextField.CENTER);
        ShowInventoryPanel = new javax.swing.JPanel();
        labelLogoShowInventory = new javax.swing.JLabel();
        ScrollPaneShowInventory = new javax.swing.JScrollPane();
        tableShowInventory = new javax.swing.JTable();
        labelSelectCategoryShowInventory = new javax.swing.JLabel();
        comboBoxShowInventory = new javax.swing.JComboBox<>();
        btnSearchShowInventory = new javax.swing.JButton();
        btnPrintShowInventory = new javax.swing.JButton();
        btnShowAllInventory = new javax.swing.JButton();
        btnClearShowInventoryTable = new javax.swing.JButton();
        AddItemsPanel = new javax.swing.JPanel();
        labelCategoryAddItem = new javax.swing.JLabel();
        comboBoxCategoryAddItem = new javax.swing.JComboBox<>();
        labelAddItemInventoryLogo = new javax.swing.JLabel();
        AddItemInventoryPanel = new javax.swing.JPanel();
        labelAddItemInventoryCategory = new javax.swing.JLabel();
        txtAddItemInventoryCategory = new javax.swing.JTextField();
        labelAddItemInventoryName = new javax.swing.JLabel();
        btnAddItemInventoryAdd = new javax.swing.JButton();
        btnAddItemInventoryCanel = new javax.swing.JButton();
        txtAddItemInventoryQuantity = new javax.swing.JTextField();
        labelAddItemInventoryQuantity = new javax.swing.JLabel();
        comboBoxAddItemInventory = new javax.swing.JComboBox<>();
        txtAddItemInventoryPrice = new javax.swing.JTextField();
        labelAddItemInventoryPrice = new javax.swing.JLabel();
        cbAddItemInventory = new javax.swing.JCheckBox();
        labelErrorAddItemInventoryQuantity = new javax.swing.JLabel();
        labelErrorAddItemInventoryPrice = new javax.swing.JLabel();
        ModifyItemsPanel = new javax.swing.JPanel();
        ModifyProductPanel = new javax.swing.JPanel();
        labelModifyProdCategory = new javax.swing.JLabel();
        txtModifyProdCategory = new javax.swing.JTextField();
        labelModifyProdName = new javax.swing.JLabel();
        labelModifyProdPricePrev = new javax.swing.JLabel();
        txtModifyProdPricePrev = new javax.swing.JTextField();
        txtModifyProdQuantityPrev = new javax.swing.JTextField();
        labelModifyProdQuantityPrev = new javax.swing.JLabel();
        btnModifyProdItem = new javax.swing.JButton();
        btnModifyProdCanel = new javax.swing.JButton();
        txtModifyProdQuantity = new javax.swing.JTextField();
        labelModifyProdQuantity = new javax.swing.JLabel();
        comboBoxProductModify = new javax.swing.JComboBox<>();
        txtModifyProdPrice = new javax.swing.JTextField();
        labelModifyProdPrice = new javax.swing.JLabel();
        labelErrorPriceModifyItem = new javax.swing.JLabel();
        labelErrorQuantityModifyItem = new javax.swing.JLabel();
        labelModifyItems = new javax.swing.JLabel();
        comboBoxCategoryModify = new javax.swing.JComboBox<>();
        labelCategoryModify = new javax.swing.JLabel();
        AddProductTabPanel = new javax.swing.JPanel();
        labelAddProductLogo = new javax.swing.JLabel();
        labelCategory = new javax.swing.JLabel();
        comboBoxCategory = new javax.swing.JComboBox<>();
        AddProductPanel = new javax.swing.JPanel();
        labelAddProdCategory = new javax.swing.JLabel();
        txtAddProdCategory = new javax.swing.JTextField();
        labelAddProdName = new javax.swing.JLabel();
        txtAddProdName = new javax.swing.JTextField();
        labelAddProdPrice = new javax.swing.JLabel();
        txtAddProdPrice = new javax.swing.JTextField();
        txtAddProdQuantity = new javax.swing.JTextField();
        labelAddProdQuantity = new javax.swing.JLabel();
        btnAddProdItem = new javax.swing.JButton();
        btnAddProdCanel = new javax.swing.JButton();
        labelErrorAddProdPrice = new javax.swing.JLabel();
        labelErrorAddProdQuantity = new javax.swing.JLabel();
        AddCategoryPanel = new javax.swing.JPanel();
        labelAddNewCat = new javax.swing.JLabel();
        labelAddCategoryName = new javax.swing.JLabel();
        txtAddCategoryName = new javax.swing.JTextField();
        btnAddCategory = new javax.swing.JButton();
        btnCancelCategory = new javax.swing.JButton();
        labelErrorAddCategory = new javax.swing.JLabel();
        MenuBar = new javax.swing.JMenuBar();
        firstMenuOption = new javax.swing.JMenu();
        logoutMenuBtn = new javax.swing.JMenuItem();
        firstMenuSeprator = new javax.swing.JPopupMenu.Separator();
        exitMenuBtn = new javax.swing.JMenuItem();
        secondMenuOption = new javax.swing.JMenu();
        versionInfo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        contactDeveloper = new javax.swing.JMenuItem();

        BillingMenu.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        BillingMenu.setTitle("New Bill");
        BillingMenu.setAlwaysOnTop(true);
        BillingMenu.setMinimumSize(new java.awt.Dimension(929, 800));
        BillingMenu.setResizable(false);
        BillingMenu.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                BillingMenuWindowClosing(evt);
            }
        });

        BillPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("New Bill"));
        BillPanel.setMinimumSize(new java.awt.Dimension(929, 800));
        BillPanel.setPreferredSize(new java.awt.Dimension(929, 800));

        tableBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr", "Product", "Qty", "Rate", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableBill);
        if (tableBill.getColumnModel().getColumnCount() > 0) {
            tableBill.getColumnModel().getColumn(0).setResizable(false);
            tableBill.getColumnModel().getColumn(0).setPreferredWidth(2);
            tableBill.getColumnModel().getColumn(1).setResizable(false);
            tableBill.getColumnModel().getColumn(1).setPreferredWidth(200);
            tableBill.getColumnModel().getColumn(2).setResizable(false);
            tableBill.getColumnModel().getColumn(2).setPreferredWidth(4);
            tableBill.getColumnModel().getColumn(3).setResizable(false);
            tableBill.getColumnModel().getColumn(3).setPreferredWidth(4);
            tableBill.getColumnModel().getColumn(4).setResizable(false);
            tableBill.getColumnModel().getColumn(4).setPreferredWidth(6);
        }

        labelBillCategoryName.setText("Category");

        comboBoxBillCategoryName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxBillCategoryNameActionPerformed(evt);
            }
        });

        labelBillProductName.setText("Product");

        comboBoxBillProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxBillProductNameActionPerformed(evt);
            }
        });

        labelBillQuantity.setText("Quantity");

        txtBillQuantitySpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        txtBillQuantitySpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtBillQuantitySpinnerStateChanged(evt);
            }
        });

        labelBillPrice.setText("Price");

        txtBillPrice.setEditable(false);

        labelBillAmount.setText("Amount");

        txtBillAmount.setEditable(false);

        btnBillAddItem.setText("Add Item");
        btnBillAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBillAddItemActionPerformed(evt);
            }
        });

        btnBillPrint.setText("Print");
        btnBillPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBillPrintActionPerformed(evt);
            }
        });

        txtBillTotalAmount.setEditable(false);

        labelBillTotalAmount.setText("Total : ");

        labelCustomerName.setText("Customer Name :");

        labelPaymentMode.setText("Payment Mode : ");

        comboBoxSelectPayment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CASH", "CREDIT", "DIGITAL" }));

        labelErrorNotMuchQuantity.setForeground(new java.awt.Color(255, 0, 0));

        btnDeleteItemFromBill.setText("Delete Item");
        btnDeleteItemFromBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteItemFromBillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BillPanelLayout = new javax.swing.GroupLayout(BillPanel);
        BillPanel.setLayout(BillPanelLayout);
        BillPanelLayout.setHorizontalGroup(
            BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BillPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BillPanelLayout.createSequentialGroup()
                        .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(BillPanelLayout.createSequentialGroup()
                                .addComponent(btnDeleteItemFromBill)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBillPrint))
                            .addGroup(BillPanelLayout.createSequentialGroup()
                                .addComponent(labelBillTotalAmount)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtBillTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)))
                .addContainerGap())
            .addGroup(BillPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BillPanelLayout.createSequentialGroup()
                        .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelBillCategoryName)
                            .addComponent(comboBoxBillCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelBillProductName)
                            .addComponent(comboBoxBillProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(BillPanelLayout.createSequentialGroup()
                        .addComponent(labelCustomerName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelErrorNotMuchQuantity)
                    .addGroup(BillPanelLayout.createSequentialGroup()
                        .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelBillQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBillQuantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBillPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelBillPrice))
                        .addGap(30, 30, 30)
                        .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelBillAmount)
                            .addGroup(BillPanelLayout.createSequentialGroup()
                                .addComponent(txtBillAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(btnBillAddItem))))
                    .addGroup(BillPanelLayout.createSequentialGroup()
                        .addComponent(labelPaymentMode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxSelectPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(126, 126, 126))
        );
        BillPanelLayout.setVerticalGroup(
            BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BillPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCustomerName)
                    .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPaymentMode)
                    .addComponent(comboBoxSelectPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBillCategoryName)
                    .addComponent(labelBillProductName)
                    .addComponent(labelBillQuantity)
                    .addComponent(labelBillPrice)
                    .addComponent(labelBillAmount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxBillCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxBillProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBillQuantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBillPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBillAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBillAddItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelErrorNotMuchQuantity)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBillTotalAmount)
                    .addComponent(txtBillTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBillPrint)
                    .addComponent(btnDeleteItemFromBill))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout BillingMenuLayout = new javax.swing.GroupLayout(BillingMenu.getContentPane());
        BillingMenu.getContentPane().setLayout(BillingMenuLayout);
        BillingMenuLayout.setHorizontalGroup(
            BillingMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BillPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BillingMenuLayout.setVerticalGroup(
            BillingMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BillPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        PrintMenu.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        PrintMenu.setTitle("Print Menu");
        PrintMenu.setAlwaysOnTop(true);
        PrintMenu.setMinimumSize(new java.awt.Dimension(800, 800));

        PrintPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Bill Preview"));
        PrintPanel.setMinimumSize(new java.awt.Dimension(800, 800));

        txtAreaBillPreview.setEditable(false);
        txtAreaBillPreview.setColumns(20);
        txtAreaBillPreview.setRows(5);
        jScrollPane2.setViewportView(txtAreaBillPreview);

        btnPrintBillPreview.setText("Print");
        btnPrintBillPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintBillPreviewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PrintPanelLayout = new javax.swing.GroupLayout(PrintPanel);
        PrintPanel.setLayout(PrintPanelLayout);
        PrintPanelLayout.setHorizontalGroup(
            PrintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrintPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(PrintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPrintBillPreview)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        PrintPanelLayout.setVerticalGroup(
            PrintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrintPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPrintBillPreview)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PrintMenuLayout = new javax.swing.GroupLayout(PrintMenu.getContentPane());
        PrintMenu.getContentPane().setLayout(PrintMenuLayout);
        PrintMenuLayout.setHorizontalGroup(
            PrintMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PrintPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PrintMenuLayout.setVerticalGroup(
            PrintMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PrintPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        ChangePassword.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        ChangePassword.setTitle("Change Password");
        ChangePassword.setMinimumSize(new java.awt.Dimension(500, 429));

        ChangePasswordPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Change Password"));
        ChangePasswordPanel.setMinimumSize(new java.awt.Dimension(500, 429));

        labelOldPassword.setText("Old Password :");

        labelNewPassword.setText("New Password :");

        labelConfirmPassword.setText("Confirm New Password");

        txtOldPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtOldPasswordFocusGained(evt);
            }
        });

        txtNewPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNewPasswordFocusGained(evt);
            }
        });

        txtConfirmPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtConfirmPasswordFocusGained(evt);
            }
        });

        btnChangeNewPassword.setText("Change Password");
        btnChangeNewPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeNewPasswordActionPerformed(evt);
            }
        });

        btnCancelNewPassword.setText("Cancel");
        btnCancelNewPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelNewPasswordActionPerformed(evt);
            }
        });

        labelErrorOldPassword.setForeground(new java.awt.Color(255, 0, 0));

        labelErrorNewPassword.setForeground(new java.awt.Color(255, 0, 0));

        labelErrorConfirmPassword.setForeground(new java.awt.Color(255, 0, 0));

        labelErrorChangePassword.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout ChangePasswordPanelLayout = new javax.swing.GroupLayout(ChangePasswordPanel);
        ChangePasswordPanel.setLayout(ChangePasswordPanelLayout);
        ChangePasswordPanelLayout.setHorizontalGroup(
            ChangePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChangePasswordPanelLayout.createSequentialGroup()
                .addGroup(ChangePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ChangePasswordPanelLayout.createSequentialGroup()
                        .addGroup(ChangePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ChangePasswordPanelLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(ChangePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelOldPassword)
                                    .addGroup(ChangePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(labelConfirmPassword)
                                        .addComponent(labelNewPassword, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ChangePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelErrorOldPassword)
                                    .addGroup(ChangePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtOldPassword)
                                        .addComponent(txtNewPassword)
                                        .addComponent(txtConfirmPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                                    .addComponent(labelErrorNewPassword)
                                    .addComponent(labelErrorConfirmPassword)))
                            .addGroup(ChangePasswordPanelLayout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addComponent(btnChangeNewPassword)
                                .addGap(61, 61, 61)
                                .addComponent(btnCancelNewPassword)))
                        .addGap(0, 80, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ChangePasswordPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(labelErrorChangePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        ChangePasswordPanelLayout.setVerticalGroup(
            ChangePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChangePasswordPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(ChangePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelOldPassword)
                    .addComponent(txtOldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelErrorOldPassword)
                .addGap(55, 55, 55)
                .addGroup(ChangePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNewPassword)
                    .addComponent(txtNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelErrorNewPassword)
                .addGap(55, 55, 55)
                .addGroup(ChangePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConfirmPassword)
                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelErrorConfirmPassword)
                .addGap(55, 55, 55)
                .addGroup(ChangePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChangeNewPassword)
                    .addComponent(btnCancelNewPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelErrorChangePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ChangePasswordLayout = new javax.swing.GroupLayout(ChangePassword.getContentPane());
        ChangePassword.getContentPane().setLayout(ChangePasswordLayout);
        ChangePasswordLayout.setHorizontalGroup(
            ChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ChangePasswordPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ChangePasswordLayout.setVerticalGroup(
            ChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ChangePasswordPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        AddNewUser.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        AddNewUser.setTitle("Add New User");
        AddNewUser.setMinimumSize(new java.awt.Dimension(500, 500));

        AddNewUserPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Add New User"));
        AddNewUserPanel.setMinimumSize(new java.awt.Dimension(500, 500));
        AddNewUserPanel.setPreferredSize(new java.awt.Dimension(500, 500));

        lableNewUserName.setText("New User Name :");

        labelNewUserPassword.setText("New User Password :");

        labelNewUserConfirmPassword.setText("Confirm Password :");

        txtNewUserName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNewUserNameFocusGained(evt);
            }
        });

        labelNewUserContactNumber.setText("Contact Number:");

        txtNewUserContact.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNewUserContactFocusGained(evt);
            }
        });

        txtNewUserPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNewUserPasswordFocusGained(evt);
            }
        });

        txtNewUserConfirmPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNewUserConfirmPasswordFocusGained(evt);
            }
        });

        btnAddUser.setText("Add New User");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        btnAddUserCancel.setText("Cancel");
        btnAddUserCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddNewUserPanelLayout = new javax.swing.GroupLayout(AddNewUserPanel);
        AddNewUserPanel.setLayout(AddNewUserPanelLayout);
        AddNewUserPanelLayout.setHorizontalGroup(
            AddNewUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddNewUserPanelLayout.createSequentialGroup()
                .addGroup(AddNewUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddNewUserPanelLayout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(AddNewUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelErrorAddNewUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(AddNewUserPanelLayout.createSequentialGroup()
                                .addComponent(btnAddUser)
                                .addGap(52, 52, 52)
                                .addComponent(btnAddUserCancel))))
                    .addGroup(AddNewUserPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(AddNewUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelNewUserContactNumber)
                            .addComponent(labelNewUserConfirmPassword)
                            .addComponent(lableNewUserName)
                            .addComponent(labelNewUserPassword))
                        .addGap(34, 34, 34)
                        .addGroup(AddNewUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNewUserName)
                            .addComponent(txtNewUserContact)
                            .addComponent(txtNewUserPassword)
                            .addComponent(txtNewUserConfirmPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                            .addComponent(labelErrorConfirmPassAddUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        AddNewUserPanelLayout.setVerticalGroup(
            AddNewUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddNewUserPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(AddNewUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lableNewUserName)
                    .addComponent(txtNewUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(AddNewUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNewUserContactNumber)
                    .addComponent(txtNewUserContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(AddNewUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNewUserPassword)
                    .addComponent(txtNewUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(AddNewUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelNewUserConfirmPassword)
                    .addComponent(txtNewUserConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelErrorConfirmPassAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(AddNewUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddUser)
                    .addComponent(btnAddUserCancel))
                .addGap(31, 31, 31)
                .addComponent(labelErrorAddNewUser, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AddNewUserLayout = new javax.swing.GroupLayout(AddNewUser.getContentPane());
        AddNewUser.getContentPane().setLayout(AddNewUserLayout);
        AddNewUserLayout.setHorizontalGroup(
            AddNewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AddNewUserPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        AddNewUserLayout.setVerticalGroup(
            AddNewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AddNewUserPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        RemoveUser.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        RemoveUser.setTitle("Remove User");
        RemoveUser.setMinimumSize(new java.awt.Dimension(500, 500));
        RemoveUser.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                RemoveUserWindowClosing(evt);
            }
        });

        RemoveUserPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Remove User"));
        RemoveUserPanel.setMinimumSize(new java.awt.Dimension(500, 500));

        labelSelectUserRemove.setText("Select User :");

        btnRemoveUserGo.setText("Remove User");
        btnRemoveUserGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveUserGoActionPerformed(evt);
            }
        });

        btnRemoveUserCancel.setText("Cancel");
        btnRemoveUserCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveUserCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RemoveUserPanelLayout = new javax.swing.GroupLayout(RemoveUserPanel);
        RemoveUserPanel.setLayout(RemoveUserPanelLayout);
        RemoveUserPanelLayout.setHorizontalGroup(
            RemoveUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RemoveUserPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(labelSelectUserRemove)
                .addGap(18, 18, 18)
                .addGroup(RemoveUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RemoveUserPanelLayout.createSequentialGroup()
                        .addComponent(btnRemoveUserGo)
                        .addGap(71, 71, 71)
                        .addComponent(btnRemoveUserCancel))
                    .addComponent(comboBoxUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        RemoveUserPanelLayout.setVerticalGroup(
            RemoveUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RemoveUserPanelLayout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addGroup(RemoveUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSelectUserRemove)
                    .addComponent(comboBoxUserList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(106, 106, 106)
                .addGroup(RemoveUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveUserGo)
                    .addComponent(btnRemoveUserCancel))
                .addContainerGap(231, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout RemoveUserLayout = new javax.swing.GroupLayout(RemoveUser.getContentPane());
        RemoveUser.getContentPane().setLayout(RemoveUserLayout);
        RemoveUserLayout.setHorizontalGroup(
            RemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 512, Short.MAX_VALUE)
            .addGroup(RemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(RemoveUserLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(RemoveUserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        RemoveUserLayout.setVerticalGroup(
            RemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 525, Short.MAX_VALUE)
            .addGroup(RemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(RemoveUserLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(RemoveUserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        ShowInvoices.setMinimumSize(new java.awt.Dimension(800, 700));
        ShowInvoices.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                ShowInvoicesWindowClosing(evt);
            }
        });

        ShowInvoicePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Show Invoices"));
        ShowInvoicePanel.setMinimumSize(new java.awt.Dimension(800, 700));

        tableInvoices.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tableInvoices);

        javax.swing.GroupLayout ShowInvoicePanelLayout = new javax.swing.GroupLayout(ShowInvoicePanel);
        ShowInvoicePanel.setLayout(ShowInvoicePanelLayout);
        ShowInvoicePanelLayout.setHorizontalGroup(
            ShowInvoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowInvoicePanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        ShowInvoicePanelLayout.setVerticalGroup(
            ShowInvoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowInvoicePanelLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ShowInvoicesLayout = new javax.swing.GroupLayout(ShowInvoices.getContentPane());
        ShowInvoices.getContentPane().setLayout(ShowInvoicesLayout);
        ShowInvoicesLayout.setHorizontalGroup(
            ShowInvoicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(ShowInvoicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ShowInvoicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ShowInvoicesLayout.setVerticalGroup(
            ShowInvoicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(ShowInvoicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ShowInvoicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        DeveloperInfo.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        DeveloperInfo.setTitle("Developer Information");
        DeveloperInfo.setAlwaysOnTop(true);
        DeveloperInfo.setMinimumSize(new java.awt.Dimension(400, 300));

        DeveloperInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Developer Information"));
        DeveloperInfoPanel.setMinimumSize(new java.awt.Dimension(400, 300));

        labelDeveloperName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelDeveloperName.setText("Shubham Jain");

        textAreaDeveloperInformation.setEditable(false);
        textAreaDeveloperInformation.setColumns(20);
        textAreaDeveloperInformation.setRows(5);
        textAreaDeveloperInformation.setText("Contact Number : 8559029920\nEmail : shubhamjain839@gmail.com\n\nJava Developer \n");
        jScrollPane4.setViewportView(textAreaDeveloperInformation);

        javax.swing.GroupLayout DeveloperInfoPanelLayout = new javax.swing.GroupLayout(DeveloperInfoPanel);
        DeveloperInfoPanel.setLayout(DeveloperInfoPanelLayout);
        DeveloperInfoPanelLayout.setHorizontalGroup(
            DeveloperInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeveloperInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DeveloperInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDeveloperName))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        DeveloperInfoPanelLayout.setVerticalGroup(
            DeveloperInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeveloperInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelDeveloperName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout DeveloperInfoLayout = new javax.swing.GroupLayout(DeveloperInfo.getContentPane());
        DeveloperInfo.getContentPane().setLayout(DeveloperInfoLayout);
        DeveloperInfoLayout.setHorizontalGroup(
            DeveloperInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DeveloperInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        DeveloperInfoLayout.setVerticalGroup(
            DeveloperInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DeveloperInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("StoreMan");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("MainFrame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1000, 800));
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        labelLogo.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        labelLogo.setText("Welcome To Store Man");

        labelPassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelPassword.setText("Password : ");

        labelLogin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelLogin.setText("Login ID : ");

        txtLoginName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLoginNameFocusGained(evt);
            }
        });

        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPasswordFocusGained(evt);
            }
        });
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordKeyPressed(evt);
            }
        });

        btnLogin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        labelErrorLogin.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout LoginPageLayout = new javax.swing.GroupLayout(LoginPage);
        LoginPage.setLayout(LoginPageLayout);
        LoginPageLayout.setHorizontalGroup(
            LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPageLayout.createSequentialGroup()
                .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(LoginPageLayout.createSequentialGroup()
                            .addGap(309, 309, 309)
                            .addComponent(labelLogo))
                        .addGroup(LoginPageLayout.createSequentialGroup()
                            .addGap(243, 243, 243)
                            .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelPassword)
                                .addComponent(labelLogin))
                            .addGap(49, 49, 49)
                            .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelErrorLogin)
                                .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtLoginName, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                                    .addComponent(txtPassword))))))
                .addContainerGap(355, Short.MAX_VALUE))
        );
        LoginPageLayout.setVerticalGroup(
            LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPageLayout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(labelLogo)
                .addGap(109, 109, 109)
                .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLogin)
                    .addComponent(txtLoginName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addComponent(btnLogin)
                .addGap(60, 60, 60)
                .addComponent(labelErrorLogin)
                .addGap(285, 285, 285))
        );

        getContentPane().add(LoginPage, "card2");

        TabbedPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TabbedPaneFocusLost(evt);
            }
        });

        WelcomePanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                WelcomePanelComponentShown(evt);
            }
        });

        labelLogoWelcome.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labelLogoWelcome.setText("Welcome");

        labelUserName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        AccountSetting.setBorder(javax.swing.BorderFactory.createTitledBorder("Account Setting"));

        btnChangePassword.setText("Change Password");
        btnChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePasswordActionPerformed(evt);
            }
        });

        btnAddNewUser.setText("Add New User");
        btnAddNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewUserActionPerformed(evt);
            }
        });

        btnRemoveUser.setText("Remove User");
        btnRemoveUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AccountSettingLayout = new javax.swing.GroupLayout(AccountSetting);
        AccountSetting.setLayout(AccountSettingLayout);
        AccountSettingLayout.setHorizontalGroup(
            AccountSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccountSettingLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(AccountSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRemoveUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnChangePassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddNewUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        AccountSettingLayout.setVerticalGroup(
            AccountSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccountSettingLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(btnChangePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnAddNewUser, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnRemoveUser, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        Billing.setBorder(javax.swing.BorderFactory.createTitledBorder("Billing"));

        btnNewBill.setText("New Bill");
        btnNewBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewBillActionPerformed(evt);
            }
        });

        btnShowInvoices.setText("View Invoices");
        btnShowInvoices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowInvoicesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BillingLayout = new javax.swing.GroupLayout(Billing);
        Billing.setLayout(BillingLayout);
        BillingLayout.setHorizontalGroup(
            BillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BillingLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(BillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnShowInvoices, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNewBill, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        BillingLayout.setVerticalGroup(
            BillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BillingLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(btnNewBill, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnShowInvoices, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        InventoryOverview.setBorder(javax.swing.BorderFactory.createTitledBorder("Inventory Overview"));

        labelTotalItem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelTotalItem.setText("Total Items");

        txtTotalItem.setEditable(false);
        txtTotalItem.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        labelTotalCategories.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelTotalCategories.setText("Total Categories");

        txtTotalCategoies.setEditable(false);
        txtTotalCategoies.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        labelInventoryValue.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelInventoryValue.setText("Inventory Value");

        txtInventoryalue.setEditable(false);
        txtInventoryalue.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        labelTotalProduct.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelTotalProduct.setText("Total Products");

        txtTotalProduct.setEditable(false);
        txtTotalProduct.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        javax.swing.GroupLayout InventoryOverviewLayout = new javax.swing.GroupLayout(InventoryOverview);
        InventoryOverview.setLayout(InventoryOverviewLayout);
        InventoryOverviewLayout.setHorizontalGroup(
            InventoryOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InventoryOverviewLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(InventoryOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InventoryOverviewLayout.createSequentialGroup()
                        .addGroup(InventoryOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTotalProduct, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotalCategoies, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(InventoryOverviewLayout.createSequentialGroup()
                                .addComponent(txtTotalItem, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(91, 91, 91))
                    .addGroup(InventoryOverviewLayout.createSequentialGroup()
                        .addGroup(InventoryOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(InventoryOverviewLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(labelTotalCategories, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(InventoryOverviewLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(labelTotalItem)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(InventoryOverviewLayout.createSequentialGroup()
                .addGroup(InventoryOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InventoryOverviewLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(labelTotalProduct))
                    .addGroup(InventoryOverviewLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(labelInventoryValue))
                    .addGroup(InventoryOverviewLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(txtInventoryalue, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        InventoryOverviewLayout.setVerticalGroup(
            InventoryOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InventoryOverviewLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(labelTotalCategories)
                .addGap(18, 18, 18)
                .addComponent(txtTotalCategoies, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelTotalProduct)
                .addGap(18, 18, 18)
                .addComponent(txtTotalProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelInventoryValue)
                .addGap(18, 18, 18)
                .addComponent(txtInventoryalue, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelTotalItem)
                .addGap(18, 18, 18)
                .addComponent(txtTotalItem, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout WelcomePanelLayout = new javax.swing.GroupLayout(WelcomePanel);
        WelcomePanel.setLayout(WelcomePanelLayout);
        WelcomePanelLayout.setHorizontalGroup(
            WelcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WelcomePanelLayout.createSequentialGroup()
                .addGroup(WelcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WelcomePanelLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(labelLogoWelcome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(WelcomePanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(AccountSetting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(Billing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(InventoryOverview, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        WelcomePanelLayout.setVerticalGroup(
            WelcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WelcomePanelLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(WelcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelLogoWelcome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                .addGroup(WelcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(InventoryOverview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Billing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AccountSetting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        TabbedPane.addTab("Welcome ", WelcomePanel);

        labelLogoShowInventory.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labelLogoShowInventory.setText("Show Inventory Items");

        tableShowInventory.setAutoCreateRowSorter(true);
        tableShowInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        ScrollPaneShowInventory.setViewportView(tableShowInventory);

        labelSelectCategoryShowInventory.setText("Select Category : ");

        comboBoxShowInventory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Item" }));

        btnSearchShowInventory.setText("Search");
        btnSearchShowInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchShowInventoryActionPerformed(evt);
            }
        });

        btnPrintShowInventory.setText("Print");
        btnPrintShowInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintShowInventoryActionPerformed(evt);
            }
        });

        btnShowAllInventory.setText("Show All Inventory");
        btnShowAllInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllInventoryActionPerformed(evt);
            }
        });

        btnClearShowInventoryTable.setText("Clear");
        btnClearShowInventoryTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearShowInventoryTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ShowInventoryPanelLayout = new javax.swing.GroupLayout(ShowInventoryPanel);
        ShowInventoryPanel.setLayout(ShowInventoryPanelLayout);
        ShowInventoryPanelLayout.setHorizontalGroup(
            ShowInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowInventoryPanelLayout.createSequentialGroup()
                .addGroup(ShowInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ShowInventoryPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnClearShowInventoryTable))
                    .addGroup(ShowInventoryPanelLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(ShowInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ShowInventoryPanelLayout.createSequentialGroup()
                                .addComponent(btnShowAllInventory)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPrintShowInventory))
                            .addComponent(ScrollPaneShowInventory, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 866, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ShowInventoryPanelLayout.createSequentialGroup()
                                .addComponent(labelSelectCategoryShowInventory)
                                .addGap(26, 26, 26)
                                .addComponent(comboBoxShowInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(btnSearchShowInventory))
                            .addComponent(labelLogoShowInventory, javax.swing.GroupLayout.Alignment.LEADING))))
                .addGap(83, 83, 83))
        );
        ShowInventoryPanelLayout.setVerticalGroup(
            ShowInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowInventoryPanelLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(labelLogoShowInventory)
                .addGap(56, 56, 56)
                .addGroup(ShowInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSelectCategoryShowInventory)
                    .addComponent(comboBoxShowInventory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchShowInventory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(ShowInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrintShowInventory)
                    .addComponent(btnShowAllInventory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ScrollPaneShowInventory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClearShowInventoryTable)
                .addGap(54, 54, 54))
        );

        TabbedPane.addTab("Show Inventory", ShowInventoryPanel);

        labelCategoryAddItem.setText("Select Category : ");

        comboBoxCategoryAddItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Item" }));
        comboBoxCategoryAddItem.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        comboBoxCategoryAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCategoryAddItemActionPerformed(evt);
            }
        });

        labelAddItemInventoryLogo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labelAddItemInventoryLogo.setText("Add Items To Inventory");

        labelAddItemInventoryCategory.setText("Category :");

        txtAddItemInventoryCategory.setEditable(false);

        labelAddItemInventoryName.setText("Product Name : ");

        btnAddItemInventoryAdd.setText("Add");
        btnAddItemInventoryAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemInventoryAddActionPerformed(evt);
            }
        });

        btnAddItemInventoryCanel.setText("Cancel");
        btnAddItemInventoryCanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemInventoryCanelActionPerformed(evt);
            }
        });

        txtAddItemInventoryQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAddItemInventoryQuantityFocusGained(evt);
            }
        });

        labelAddItemInventoryQuantity.setText("Quantity :");

        comboBoxAddItemInventory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Product" }));
        comboBoxAddItemInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxAddItemInventoryActionPerformed(evt);
            }
        });

        txtAddItemInventoryPrice.setEditable(false);
        txtAddItemInventoryPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAddItemInventoryPriceFocusGained(evt);
            }
        });

        labelAddItemInventoryPrice.setText("Price Per Item :");

        cbAddItemInventory.setText("Change Price");
        cbAddItemInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAddItemInventoryActionPerformed(evt);
            }
        });

        labelErrorAddItemInventoryQuantity.setForeground(new java.awt.Color(255, 0, 0));

        labelErrorAddItemInventoryPrice.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout AddItemInventoryPanelLayout = new javax.swing.GroupLayout(AddItemInventoryPanel);
        AddItemInventoryPanel.setLayout(AddItemInventoryPanelLayout);
        AddItemInventoryPanelLayout.setHorizontalGroup(
            AddItemInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddItemInventoryPanelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(AddItemInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AddItemInventoryPanelLayout.createSequentialGroup()
                        .addGroup(AddItemInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelAddItemInventoryCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelAddItemInventoryName)
                            .addComponent(labelAddItemInventoryQuantity)
                            .addComponent(labelAddItemInventoryPrice))
                        .addGap(58, 58, 58)
                        .addGroup(AddItemInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAddItemInventoryCategory)
                            .addComponent(txtAddItemInventoryQuantity)
                            .addComponent(comboBoxAddItemInventory, 0, 200, Short.MAX_VALUE)
                            .addComponent(txtAddItemInventoryPrice)))
                    .addComponent(btnAddItemInventoryAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(AddItemInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddItemInventoryPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnAddItemInventoryCanel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddItemInventoryPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(AddItemInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelErrorAddItemInventoryQuantity)
                            .addGroup(AddItemInventoryPanelLayout.createSequentialGroup()
                                .addComponent(cbAddItemInventory)
                                .addGap(28, 28, 28)
                                .addComponent(labelErrorAddItemInventoryPrice)))))
                .addContainerGap(325, Short.MAX_VALUE))
        );
        AddItemInventoryPanelLayout.setVerticalGroup(
            AddItemInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddItemInventoryPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(AddItemInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAddItemInventoryCategory)
                    .addComponent(txtAddItemInventoryCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(AddItemInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAddItemInventoryName)
                    .addComponent(comboBoxAddItemInventory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(AddItemInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAddItemInventoryPrice)
                    .addComponent(txtAddItemInventoryPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbAddItemInventory)
                    .addComponent(labelErrorAddItemInventoryPrice))
                .addGap(28, 28, 28)
                .addGroup(AddItemInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddItemInventoryQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAddItemInventoryQuantity)
                    .addComponent(labelErrorAddItemInventoryQuantity))
                .addGap(30, 30, 30)
                .addGroup(AddItemInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddItemInventoryAdd)
                    .addComponent(btnAddItemInventoryCanel))
                .addContainerGap())
        );

        javax.swing.GroupLayout AddItemsPanelLayout = new javax.swing.GroupLayout(AddItemsPanel);
        AddItemsPanel.setLayout(AddItemsPanelLayout);
        AddItemsPanelLayout.setHorizontalGroup(
            AddItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddItemsPanelLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(AddItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddItemsPanelLayout.createSequentialGroup()
                        .addComponent(labelCategoryAddItem)
                        .addGap(35, 35, 35)
                        .addComponent(comboBoxCategoryAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelAddItemInventoryLogo)
                    .addComponent(AddItemInventoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AddItemsPanelLayout.setVerticalGroup(
            AddItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddItemsPanelLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(labelAddItemInventoryLogo)
                .addGap(110, 110, 110)
                .addGroup(AddItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCategoryAddItem)
                    .addComponent(comboBoxCategoryAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100)
                .addComponent(AddItemInventoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        TabbedPane.addTab("Add Items to Inventory", AddItemsPanel);

        labelModifyProdCategory.setText("Category :");

        txtModifyProdCategory.setEditable(false);

        labelModifyProdName.setText("Product Name : ");

        labelModifyProdPricePrev.setText("Previous Item Price :");

        txtModifyProdPricePrev.setEditable(false);

        txtModifyProdQuantityPrev.setEditable(false);

        labelModifyProdQuantityPrev.setText("Previous Quantity :");

        btnModifyProdItem.setText("Modify");
        btnModifyProdItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyProdItemActionPerformed(evt);
            }
        });

        btnModifyProdCanel.setText("Cancel");
        btnModifyProdCanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyProdCanelActionPerformed(evt);
            }
        });

        txtModifyProdQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtModifyProdQuantityFocusGained(evt);
            }
        });

        labelModifyProdQuantity.setText("Quantity :");

        comboBoxProductModify.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Product" }));
        comboBoxProductModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxProductModifyActionPerformed(evt);
            }
        });

        txtModifyProdPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtModifyProdPriceFocusGained(evt);
            }
        });

        labelModifyProdPrice.setText("Price Per Item :");

        labelErrorPriceModifyItem.setForeground(new java.awt.Color(255, 0, 0));

        labelErrorQuantityModifyItem.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout ModifyProductPanelLayout = new javax.swing.GroupLayout(ModifyProductPanel);
        ModifyProductPanel.setLayout(ModifyProductPanelLayout);
        ModifyProductPanelLayout.setHorizontalGroup(
            ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModifyProductPanelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnModifyProdItem)
                    .addGroup(ModifyProductPanelLayout.createSequentialGroup()
                        .addGroup(ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelModifyProdCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelModifyProdName)
                            .addComponent(labelModifyProdPricePrev)
                            .addComponent(labelModifyProdQuantityPrev)
                            .addComponent(labelModifyProdQuantity)
                            .addComponent(labelModifyProdPrice))
                        .addGap(32, 32, 32)
                        .addGroup(ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtModifyProdQuantityPrev)
                            .addComponent(txtModifyProdPricePrev)
                            .addComponent(txtModifyProdCategory)
                            .addComponent(txtModifyProdQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(comboBoxProductModify, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtModifyProdPrice))))
                .addGroup(ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ModifyProductPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnModifyProdCanel))
                    .addGroup(ModifyProductPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelErrorPriceModifyItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelErrorQuantityModifyItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(380, Short.MAX_VALUE))
        );
        ModifyProductPanelLayout.setVerticalGroup(
            ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModifyProductPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelModifyProdCategory)
                    .addComponent(txtModifyProdCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelModifyProdName)
                    .addComponent(comboBoxProductModify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelModifyProdPricePrev)
                    .addComponent(txtModifyProdPricePrev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelErrorPriceModifyItem, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelModifyProdPrice)
                        .addComponent(txtModifyProdPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtModifyProdQuantityPrev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelModifyProdQuantityPrev))
                .addGap(30, 30, 30)
                .addGroup(ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtModifyProdQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelModifyProdQuantity)
                    .addComponent(labelErrorQuantityModifyItem))
                .addGap(30, 30, 30)
                .addGroup(ModifyProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModifyProdItem)
                    .addComponent(btnModifyProdCanel))
                .addContainerGap())
        );

        labelModifyItems.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labelModifyItems.setText("Modify Existing Items");

        comboBoxCategoryModify.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Item" }));
        comboBoxCategoryModify.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        comboBoxCategoryModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCategoryModifyActionPerformed(evt);
            }
        });

        labelCategoryModify.setText("Select Category : ");

        javax.swing.GroupLayout ModifyItemsPanelLayout = new javax.swing.GroupLayout(ModifyItemsPanel);
        ModifyItemsPanel.setLayout(ModifyItemsPanelLayout);
        ModifyItemsPanelLayout.setHorizontalGroup(
            ModifyItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModifyItemsPanelLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(ModifyItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ModifyItemsPanelLayout.createSequentialGroup()
                        .addComponent(labelCategoryModify)
                        .addGap(35, 35, 35)
                        .addComponent(comboBoxCategoryModify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelModifyItems)
                    .addComponent(ModifyProductPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        ModifyItemsPanelLayout.setVerticalGroup(
            ModifyItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModifyItemsPanelLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(labelModifyItems)
                .addGap(110, 110, 110)
                .addGroup(ModifyItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCategoryModify)
                    .addComponent(comboBoxCategoryModify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100)
                .addComponent(ModifyProductPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        TabbedPane.addTab("Modify Existing Items ", ModifyItemsPanel);

        labelAddProductLogo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labelAddProductLogo.setText("Add New Product");

        labelCategory.setText("Select Category : ");

        comboBoxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Item" }));
        comboBoxCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        comboBoxCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCategoryActionPerformed(evt);
            }
        });

        labelAddProdCategory.setText("Category :");

        txtAddProdCategory.setEditable(false);

        labelAddProdName.setText("Product Name : ");

        labelAddProdPrice.setText("Price Per Item :");

        labelAddProdQuantity.setText("Quantity :");

        btnAddProdItem.setText("Add Item");
        btnAddProdItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProdItemActionPerformed(evt);
            }
        });

        btnAddProdCanel.setText("Cancel");
        btnAddProdCanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProdCanelActionPerformed(evt);
            }
        });

        labelErrorAddProdPrice.setForeground(new java.awt.Color(255, 0, 0));

        labelErrorAddProdQuantity.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout AddProductPanelLayout = new javax.swing.GroupLayout(AddProductPanel);
        AddProductPanel.setLayout(AddProductPanelLayout);
        AddProductPanelLayout.setHorizontalGroup(
            AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddProductPanelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAddProdItem)
                    .addGroup(AddProductPanelLayout.createSequentialGroup()
                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelAddProdCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelAddProdName)
                            .addComponent(labelAddProdPrice)
                            .addComponent(labelAddProdQuantity))
                        .addGap(32, 32, 32)
                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddProdQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddProdPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddProdCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddProdName, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddProductPanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(btnAddProdCanel))
                    .addGroup(AddProductPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelErrorAddProdQuantity)
                            .addComponent(labelErrorAddProdPrice))))
                .addContainerGap(304, Short.MAX_VALUE))
        );
        AddProductPanelLayout.setVerticalGroup(
            AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddProductPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAddProdCategory)
                    .addComponent(txtAddProdCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAddProdName)
                    .addComponent(txtAddProdName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAddProdPrice)
                    .addComponent(txtAddProdPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelErrorAddProdPrice))
                .addGap(30, 30, 30)
                .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddProdQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAddProdQuantity)
                    .addComponent(labelErrorAddProdQuantity))
                .addGap(30, 30, 30)
                .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddProdItem)
                    .addComponent(btnAddProdCanel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AddProductTabPanelLayout = new javax.swing.GroupLayout(AddProductTabPanel);
        AddProductTabPanel.setLayout(AddProductTabPanelLayout);
        AddProductTabPanelLayout.setHorizontalGroup(
            AddProductTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddProductTabPanelLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(AddProductTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddProductPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAddProductLogo)
                    .addGroup(AddProductTabPanelLayout.createSequentialGroup()
                        .addComponent(labelCategory)
                        .addGap(35, 35, 35)
                        .addComponent(comboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        AddProductTabPanelLayout.setVerticalGroup(
            AddProductTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddProductTabPanelLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(labelAddProductLogo)
                .addGap(110, 110, 110)
                .addGroup(AddProductTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCategory)
                    .addComponent(comboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(107, 107, 107)
                .addComponent(AddProductPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(164, Short.MAX_VALUE))
        );

        TabbedPane.addTab("Add Product", AddProductTabPanel);

        labelAddNewCat.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labelAddNewCat.setText("Add New Category");

        labelAddCategoryName.setText("Category Name : ");

        txtAddCategoryName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAddCategoryNameFocusGained(evt);
            }
        });

        btnAddCategory.setText("Add Category");
        btnAddCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCategoryActionPerformed(evt);
            }
        });

        btnCancelCategory.setText("Cancel");
        btnCancelCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelCategoryActionPerformed(evt);
            }
        });

        labelErrorAddCategory.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout AddCategoryPanelLayout = new javax.swing.GroupLayout(AddCategoryPanel);
        AddCategoryPanel.setLayout(AddCategoryPanelLayout);
        AddCategoryPanelLayout.setHorizontalGroup(
            AddCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddCategoryPanelLayout.createSequentialGroup()
                .addGroup(AddCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddCategoryPanelLayout.createSequentialGroup()
                        .addGroup(AddCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(AddCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(AddCategoryPanelLayout.createSequentialGroup()
                                    .addGap(80, 80, 80)
                                    .addComponent(labelAddNewCat))
                                .addGroup(AddCategoryPanelLayout.createSequentialGroup()
                                    .addGap(166, 166, 166)
                                    .addComponent(labelAddCategoryName)
                                    .addGap(32, 32, 32)
                                    .addComponent(txtAddCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnAddCategory))
                        .addGap(46, 46, 46)
                        .addComponent(btnCancelCategory))
                    .addGroup(AddCategoryPanelLayout.createSequentialGroup()
                        .addGap(390, 390, 390)
                        .addComponent(labelErrorAddCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(427, Short.MAX_VALUE))
        );
        AddCategoryPanelLayout.setVerticalGroup(
            AddCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddCategoryPanelLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(labelAddNewCat)
                .addGap(210, 210, 210)
                .addGroup(AddCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAddCategoryName)
                    .addComponent(txtAddCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91)
                .addGroup(AddCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddCategory)
                    .addComponent(btnCancelCategory))
                .addGap(51, 51, 51)
                .addComponent(labelErrorAddCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(257, Short.MAX_VALUE))
        );

        TabbedPane.addTab("Add Category", AddCategoryPanel);

        javax.swing.GroupLayout HomePageLayout = new javax.swing.GroupLayout(HomePage);
        HomePage.setLayout(HomePageLayout);
        HomePageLayout.setHorizontalGroup(
            HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPane)
        );
        HomePageLayout.setVerticalGroup(
            HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPane)
        );

        getContentPane().add(HomePage, "card3");

        firstMenuOption.setText("StoreMan");

        logoutMenuBtn.setText("Logout");
        logoutMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutMenuBtnActionPerformed(evt);
            }
        });
        firstMenuOption.add(logoutMenuBtn);
        firstMenuOption.add(firstMenuSeprator);

        exitMenuBtn.setText("Exit");
        exitMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuBtnActionPerformed(evt);
            }
        });
        firstMenuOption.add(exitMenuBtn);

        MenuBar.add(firstMenuOption);

        secondMenuOption.setText("About");

        versionInfo.setText("Version 1.0");
        secondMenuOption.add(versionInfo);
        secondMenuOption.add(jSeparator1);

        contactDeveloper.setText("Contact Developer");
        contactDeveloper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactDeveloperActionPerformed(evt);
            }
        });
        secondMenuOption.add(contactDeveloper);

        MenuBar.add(secondMenuOption);

        setJMenuBar(MenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        auth();
    }//GEN-LAST:event_btnLoginActionPerformed

    private void exitMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitMenuBtnActionPerformed

    private void btnAddProdItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProdItemActionPerformed
        int showDialog = JOptionPane.showConfirmDialog(this, "Are You Sure ?", "Add Product", JOptionPane.YES_NO_OPTION);
        if (showDialog == JOptionPane.YES_OPTION) {
            try {
                int price = Integer.parseInt(txtAddProdPrice.getText());
                int quantity = Integer.parseInt(txtAddProdQuantity.getText());
                String category = txtAddProdCategory.getText();
                String name = txtAddProdName.getText();
                if (price <= 0 || quantity < 0) {
                    throw new NumberFormatException();
                }
                if (SQLQueries.addToProductTable(name, price, quantity, category)) {
                    JOptionPane.showMessageDialog(this, "Product Added Successfully !");
                } else {
                    JOptionPane.showMessageDialog(this, "Server Error !");
                }
                resetTxtAddProd();
            } catch (NumberFormatException e) {
                labelErrorAddProdPrice.setText("Invalid Price !");
                labelErrorAddProdQuantity.setText("Invalid Quantity !");
            }
        } else {
            // TO BE DONE;
        }
    }//GEN-LAST:event_btnAddProdItemActionPerformed

    private void btnAddProdCanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProdCanelActionPerformed
        txtAddProdCategory.setText("");
        resetTxtAddProd();
        AddProductPanel.setVisible(false);
    }//GEN-LAST:event_btnAddProdCanelActionPerformed

    private void btnModifyProdItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyProdItemActionPerformed
        int showDialog = JOptionPane.showConfirmDialog(this, "Are You Sure to Modify Items ?", "Modify Items", JOptionPane.YES_NO_OPTION);
        if (showDialog == JOptionPane.YES_OPTION) {
            try {
                int price = Integer.parseInt(txtModifyProdPrice.getText());
                int quantity = Integer.parseInt(txtModifyProdQuantity.getText());
                String name = String.valueOf(comboBoxProductModify.getSelectedItem());
                if (price <= 0 || quantity < 0) {
                    throw new NumberFormatException();
                }
                if (SQLQueries.productTableUpdate(name, price, quantity) > 0) {
                    JOptionPane.showMessageDialog(this, "Item Modified !");
                } else {
                    JOptionPane.showMessageDialog(this, "Server Error !");
                }
                resetModifyFields();
            } catch (NumberFormatException nfe) {
                labelErrorPriceModifyItem.setText("Invalid Amount !");
                labelErrorQuantityModifyItem.setText("Invalid Quantity !");
                System.out.print(nfe.getMessage());
            }
        } else {
            //To be done
        }

    }//GEN-LAST:event_btnModifyProdItemActionPerformed

    private void btnModifyProdCanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyProdCanelActionPerformed
        comboBoxProductModify.removeAllItems();
        comboBoxCategoryModify.setSelectedIndex(0);
        resetModifyFields();
        ModifyProductPanel.setVisible(false);
    }//GEN-LAST:event_btnModifyProdCanelActionPerformed

    private void comboBoxCategoryModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCategoryModifyActionPerformed
        comboBoxProductModify.removeAllItems();
        resetModifyFields();
        String category = String.valueOf(comboBoxCategoryModify.getSelectedItem());
        ModifyProductPanel.setVisible(true);
        try {
            ResultSet rs = SQLQueries.fillProductByCategory(category);
            while (rs.next()) {
                comboBoxProductModify.addItem(rs.getString("PRODUCT_NAME"));
            }
        } catch (SQLException se) {
            System.out.println(se.getMessage());
        }
        txtModifyProdCategory.setText(category);
    }//GEN-LAST:event_comboBoxCategoryModifyActionPerformed

    private void comboBoxProductModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxProductModifyActionPerformed
        String productName = String.valueOf(comboBoxProductModify.getSelectedItem());
        resetModifyFields();
        try {
            ResultSet rs = SQLQueries.fillProductInformation(productName);
            txtModifyProdPricePrev.setText(rs.getString("PRODUCT_RATE"));
            txtModifyProdQuantityPrev.setText(rs.getString("PRODUCT_QUANTITY"));
        } catch (SQLException se) {
            System.out.println(se.getMessage());
        }
    }//GEN-LAST:event_comboBoxProductModifyActionPerformed

    private void comboBoxCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCategoryActionPerformed
        String category = String.valueOf(comboBoxCategory.getSelectedItem());
        AddProductPanel.setVisible(true);
        txtAddProdCategory.setText(category);
    }//GEN-LAST:event_comboBoxCategoryActionPerformed

    private void logoutMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutMenuBtnActionPerformed
        userName = "";
        isAdmin = false;
        LoginPage.setVisible(true);
        HomePage.setVisible(false);
    }//GEN-LAST:event_logoutMenuBtnActionPerformed

    private void comboBoxCategoryAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCategoryAddItemActionPerformed
        comboBoxAddItemInventory.removeAllItems();
        resetAddInventoryFields();
        String category = String.valueOf(comboBoxCategoryAddItem.getSelectedItem());
        //System.out.println(category);
        AddItemInventoryPanel.setVisible(true);
        try {
            ResultSet rs = SQLQueries.fillProductByCategory(category);
            while (rs.next()) {
                comboBoxAddItemInventory.addItem(rs.getString("PRODUCT_NAME"));
            }
        } catch (SQLException se) {
            System.out.println(se.getMessage());
        }
        txtAddItemInventoryCategory.setText(category);
    }//GEN-LAST:event_comboBoxCategoryAddItemActionPerformed

    private void btnAddItemInventoryAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemInventoryAddActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Are you sure ?", "Add Product", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (showConfirmDialog == JOptionPane.YES_OPTION) {
            try {
                int quantity = Integer.parseInt(txtAddItemInventoryQuantity.getText());
                int price = Integer.parseInt(txtAddItemInventoryPrice.getText());
                String name = String.valueOf(comboBoxAddItemInventory.getSelectedItem());
                if (quantity <= 0 || price <= 0) {
                    throw new NumberFormatException();
                }
                if (SQLQueries.productQuantityUpdate(name, price, quantity) > 0) {
                    JOptionPane.showMessageDialog(this, "Item Added Successfully", "Item Added", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Server Error !", "Error", JOptionPane.ERROR);
                }
                resetAddInventoryFields();
            } catch (NumberFormatException nfe) {
                labelErrorAddItemInventoryPrice.setText("Invalid Price !");
                labelErrorAddItemInventoryQuantity.setText("Invalid Quantity !");
                System.out.println(nfe.getMessage());
            }
        } else {
            //To Be Done
        }
    }//GEN-LAST:event_btnAddItemInventoryAddActionPerformed

    private void btnAddItemInventoryCanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemInventoryCanelActionPerformed
        comboBoxAddItemInventory.removeAllItems();
        AddItemInventoryPanel.setVisible(false);
        comboBoxCategoryAddItem.setSelectedIndex(0);
        resetAddInventoryFields();
        AddItemInventoryPanel.setVisible(false);
    }//GEN-LAST:event_btnAddItemInventoryCanelActionPerformed

    private void comboBoxAddItemInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxAddItemInventoryActionPerformed
        String productName = String.valueOf(comboBoxAddItemInventory.getSelectedItem());
        resetAddInventoryFields();
        try {
            ResultSet rs = SQLQueries.fillProductInformation(productName);
            txtAddItemInventoryPrice.setText(rs.getString("PRODUCT_RATE"));
        } catch (SQLException se) {
            System.out.println(se.getMessage());
        }
    }//GEN-LAST:event_comboBoxAddItemInventoryActionPerformed

    private void cbAddItemInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAddItemInventoryActionPerformed
        if (cbAddItemInventory.isSelected()) {
            txtAddItemInventoryPrice.setEditable(true);
        } else {
            txtAddItemInventoryPrice.setEditable(false);
        }

    }//GEN-LAST:event_cbAddItemInventoryActionPerformed

    private void btnAddCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCategoryActionPerformed
        String category = txtAddCategoryName.getText();
        if (category.equals("")) {
            labelErrorAddCategory.setText("Category Can't be Empty !");
        } else {
            if (SQLQueries.addToCategoryTable(category)) {
                JOptionPane.showMessageDialog(this, "Category Added Succesfully !", "Category Added", JOptionPane.INFORMATION_MESSAGE);
                clearAllCategoryComboBoxs();
                fillCategoryComboBox();
            } else {
                labelErrorAddCategory.setText("Server Error !");
            }
        }
    }//GEN-LAST:event_btnAddCategoryActionPerformed

    private void txtAddItemInventoryQuantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAddItemInventoryQuantityFocusGained
        labelErrorAddItemInventoryQuantity.setText("");
    }//GEN-LAST:event_txtAddItemInventoryQuantityFocusGained

    private void txtAddItemInventoryPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAddItemInventoryPriceFocusGained
        labelErrorAddItemInventoryPrice.setText("");
    }//GEN-LAST:event_txtAddItemInventoryPriceFocusGained

    private void btnSearchShowInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchShowInventoryActionPerformed
        String selectedCategory = String.valueOf(comboBoxShowInventory.getSelectedItem());
        tableShowInventory.setModel(SQLQueries.populateTable(selectedCategory));
    }//GEN-LAST:event_btnSearchShowInventoryActionPerformed

    private void btnPrintShowInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintShowInventoryActionPerformed
        try {
            tableShowInventory.print();
        } catch (PrinterException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPrintShowInventoryActionPerformed

    private void btnShowAllInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllInventoryActionPerformed

        tableShowInventory.setModel(SQLQueries.fillTableAllProducts());
    }//GEN-LAST:event_btnShowAllInventoryActionPerformed

    private void txtModifyProdPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtModifyProdPriceFocusGained
        labelErrorPriceModifyItem.setText("");
    }//GEN-LAST:event_txtModifyProdPriceFocusGained

    private void txtModifyProdQuantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtModifyProdQuantityFocusGained
        labelErrorQuantityModifyItem.setText("");
    }//GEN-LAST:event_txtModifyProdQuantityFocusGained

    private void btnNewBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewBillActionPerformed
        BillingMenu.setVisible(true);
    }//GEN-LAST:event_btnNewBillActionPerformed

    private void btnBillAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBillAddItemActionPerformed

        DefaultTableModel dtm;
        dtm = (DefaultTableModel) tableBill.getModel();
        dtm.addRow(new Object[]{
            tableBill.getRowCount() + 1,
            String.valueOf(comboBoxBillProductName.getSelectedItem()),
            (int) txtBillQuantitySpinner.getValue(),
            txtBillPrice.getText(),
            txtBillAmount.getText(),});
        int sum = 0;
        for (int i = 0; i < tableBill.getRowCount(); i++) {
            sum += Integer.parseInt(String.valueOf(tableBill.getValueAt(i, 4)));
        }
        txtBillTotalAmount.setText(String.valueOf(sum));
    }//GEN-LAST:event_btnBillAddItemActionPerformed

    private void txtBillQuantitySpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtBillQuantitySpinnerStateChanged
        int qty = Integer.parseInt(String.valueOf(txtBillQuantitySpinner.getValue()));
        boolean check = SQLQueries.checkQuantity(String.valueOf(comboBoxBillProductName.getSelectedItem()), qty);
        if (qty <= 0) {
            btnBillAddItem.setEnabled(false);
        }
        else if(!check) {
            labelErrorNotMuchQuantity.setText("Ena smaan Haini !!");
            btnBillAddItem.setEnabled(false);
        } else{
            labelErrorNotMuchQuantity.setText("");
            btnBillAddItem.setEnabled(true);
            txtBillAmount.setText(String.valueOf(qty * Integer.parseInt(txtBillPrice.getText())));
        }
    }//GEN-LAST:event_txtBillQuantitySpinnerStateChanged

    private void comboBoxBillProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxBillProductNameActionPerformed
        String product = String.valueOf(comboBoxBillProductName.getSelectedItem());
        txtBillQuantitySpinner.setValue(0);
        txtBillAmount.setText("");
        try {
            ResultSet rs = SQLQueries.fillProductInformation(product);
            txtBillPrice.setText(rs.getString("PRODUCT_RATE"));
        } catch (SQLException n) {
            System.out.println(n.getMessage());
        }
    }//GEN-LAST:event_comboBoxBillProductNameActionPerformed

    private void comboBoxBillCategoryNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxBillCategoryNameActionPerformed
        String category = String.valueOf(comboBoxBillCategoryName.getSelectedItem());
        txtBillQuantitySpinner.setValue(0);
        txtBillAmount.setText("");
        comboBoxBillProductName.removeAllItems();
        try {
            ResultSet rs = SQLQueries.fillProductByCategory(category);
            while (rs.next()) {
                comboBoxBillProductName.addItem(rs.getString("PRODUCT_NAME"));
            }
        } catch (SQLException se) {
            System.out.print(se.getMessage());
        }
    }//GEN-LAST:event_comboBoxBillCategoryNameActionPerformed

    private void btnBillPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBillPrintActionPerformed
        genrateBill();
    }//GEN-LAST:event_btnBillPrintActionPerformed

    private void btnPrintBillPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintBillPreviewActionPerformed
        //BillingMenu.dispose();
        PrintMenu.setAlwaysOnTop(false);
        try {
            txtAreaBillPreview.print();
        } catch (PrinterException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPrintBillPreviewActionPerformed

    private void btnChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePasswordActionPerformed
        ChangePassword.setVisible(true);
        ChangePassword.setAlwaysOnTop(true);
    }//GEN-LAST:event_btnChangePasswordActionPerformed

    private void btnChangeNewPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeNewPasswordActionPerformed
        String oldPass = txtOldPassword.getText();
        String newPass = txtNewPassword.getText();
        String confirmPass = txtConfirmPassword.getText();
        if (oldPass.equals("") || newPass.equals("") || confirmPass.equals("")) {
            labelErrorChangePassword.setText("Empty Fields are not permitable !");
        } else if (newPass.equals(confirmPass)) {
            boolean check = SQLQueries.authen(oldPass, userName);
            if (check) {
                ChangePassword.setAlwaysOnTop(false);
                boolean isSuccess = SQLQueries.changePassword(newPass, userName);
                if (isSuccess) {
                    JOptionPane.showMessageDialog(this, "Password Changed Succesfully !");
                    ChangePassword.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Error Occured !, Please try again. ");
                }
            } else {
                labelErrorOldPassword.setText("Password is Incorect !");
            }
        } else {
            labelErrorConfirmPassword.setText("Password Do not Match !");
        }
    }//GEN-LAST:event_btnChangeNewPasswordActionPerformed

    private void txtOldPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOldPasswordFocusGained
        labelErrorOldPassword.setText("");
        labelErrorChangePassword.setText("");
    }//GEN-LAST:event_txtOldPasswordFocusGained

    private void txtNewPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNewPasswordFocusGained
        labelErrorNewPassword.setText("");
        labelErrorChangePassword.setText("");

    }//GEN-LAST:event_txtNewPasswordFocusGained

    private void txtConfirmPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtConfirmPasswordFocusGained
        labelErrorChangePassword.setText("");
        labelErrorConfirmPassword.setText("");
    }//GEN-LAST:event_txtConfirmPasswordFocusGained

    private void btnCancelNewPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelNewPasswordActionPerformed
        labelErrorOldPassword.setText("");
        labelErrorNewPassword.setText("");
        labelErrorConfirmPassword.setText("");
        labelErrorChangePassword.setText("");
        txtOldPassword.setText("");
        txtNewPassword.setText("");
        txtConfirmPassword.setText("");
        ChangePassword.dispose();
    }//GEN-LAST:event_btnCancelNewPasswordActionPerformed

    private void btnAddNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewUserActionPerformed
        AddNewUser.setVisible(true);
        AddNewUser.setAlwaysOnTop(true);
    }//GEN-LAST:event_btnAddNewUserActionPerformed

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        String newUserName = txtNewUserName.getText();
        String newUserPass = txtNewUserPassword.getText();
        String confirmPass = txtNewUserConfirmPassword.getText();
        String contact = txtNewUserContact.getText();
        if (newUserName.equals("") || newUserPass.equals("") || confirmPass.equals("") || contact.equals("")) {
            labelErrorAddNewUser.setText("Empty Fields are not Permitted !");
        } else if (newUserPass.equals(confirmPass)) {
            AddNewUser.setAlwaysOnTop(false);
            boolean check = SQLQueries.addUser(newUserName, newUserPass, contact);
            if (check) {
                JOptionPane.showMessageDialog(this, "New User Added Successfully !", "User Added", JOptionPane.INFORMATION_MESSAGE);
                AddNewUser.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Failed !", "Error", JOptionPane.ERROR);
            }
        } else {
            labelErrorConfirmPassAddUser.setText("Passwords Do not match !");
        }
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void txtNewUserNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNewUserNameFocusGained
        labelErrorAddNewUser.setText("");
    }//GEN-LAST:event_txtNewUserNameFocusGained

    private void txtNewUserContactFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNewUserContactFocusGained
        labelErrorAddNewUser.setText("");
    }//GEN-LAST:event_txtNewUserContactFocusGained

    private void txtNewUserPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNewUserPasswordFocusGained
        labelErrorAddNewUser.setText("");
    }//GEN-LAST:event_txtNewUserPasswordFocusGained

    private void txtNewUserConfirmPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNewUserConfirmPasswordFocusGained
        labelErrorAddNewUser.setText("");
        labelErrorConfirmPassAddUser.setText("");
    }//GEN-LAST:event_txtNewUserConfirmPasswordFocusGained

    private void btnAddUserCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserCancelActionPerformed
        labelErrorAddNewUser.setText("");
        labelErrorConfirmPassAddUser.setText("");
        txtNewUserName.setText("");
        txtNewUserPassword.setText("");
        txtNewUserConfirmPassword.setText("");
        txtNewUserContact.setText("");
        AddNewUser.dispose();
    }//GEN-LAST:event_btnAddUserCancelActionPerformed

    private void btnRemoveUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveUserActionPerformed
        RemoveUser.setAlwaysOnTop(true);
        RemoveUser.setVisible(true);
        try {
            ResultSet rs = SQLQueries.getCredentialsTableData(userName);
            while (rs.next()) {
                comboBoxUserList.addItem(rs.getString("id"));
            }
        } catch (SQLException se) {
            System.out.println(se.getMessage());
        }
    }//GEN-LAST:event_btnRemoveUserActionPerformed

    private void txtAddCategoryNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAddCategoryNameFocusGained
        labelErrorAddCategory.setText("");
    }//GEN-LAST:event_txtAddCategoryNameFocusGained

    private void btnClearShowInventoryTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearShowInventoryTableActionPerformed
        DefaultTableModel dtb = (DefaultTableModel) tableShowInventory.getModel();
        dtb.setRowCount(0);
    }//GEN-LAST:event_btnClearShowInventoryTableActionPerformed

    private void TabbedPaneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TabbedPaneFocusLost
        DefaultTableModel dtb = (DefaultTableModel) tableShowInventory.getModel();
        dtb.setRowCount(0);
    }//GEN-LAST:event_TabbedPaneFocusLost

    private void btnCancelCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelCategoryActionPerformed
        txtAddCategoryName.setText("");
    }//GEN-LAST:event_btnCancelCategoryActionPerformed

    private void btnDeleteItemFromBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteItemFromBillActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableBill.getModel();
        int[] rows = tableBill.getSelectedRows();
        for (int i = 0; i < rows.length; i++) {
            model.removeRow(rows[i] - i);
        }
    }//GEN-LAST:event_btnDeleteItemFromBillActionPerformed

    private void BillingMenuWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_BillingMenuWindowClosing
        clearBill();

    }//GEN-LAST:event_BillingMenuWindowClosing

    private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            auth();
        }
    }//GEN-LAST:event_txtPasswordKeyPressed

    private void btnRemoveUserGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveUserGoActionPerformed
        String user = String.valueOf(comboBoxUserList.getSelectedItem());
        int choice = JOptionPane.showConfirmDialog(this, "Are you sure ?", "Delete User", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            if (SQLQueries.deleteUser(user) > 0) {
                JOptionPane.showMessageDialog(this, "User Deleted Successfully", "User Deleted", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Failed !", "Failed", JOptionPane.ERROR);
            }
            cleanRemoveUser();
        } else {
            //to be done
        }
    }//GEN-LAST:event_btnRemoveUserGoActionPerformed

    private void btnRemoveUserCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveUserCancelActionPerformed
        cleanRemoveUser();
    }//GEN-LAST:event_btnRemoveUserCancelActionPerformed

    private void RemoveUserWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_RemoveUserWindowClosing
        cleanRemoveUser();
    }//GEN-LAST:event_RemoveUserWindowClosing

    private void txtLoginNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLoginNameFocusGained
        labelErrorLogin.setText("");
    }//GEN-LAST:event_txtLoginNameFocusGained

    private void txtPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusGained
        labelErrorLogin.setText("");
    }//GEN-LAST:event_txtPasswordFocusGained

    private void btnShowInvoicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowInvoicesActionPerformed
        ShowInvoices.setVisible(true);
        ShowInvoices.setAlwaysOnTop(true);
        tableInvoices.setModel(SQLQueries.getInvoiceData());
    }//GEN-LAST:event_btnShowInvoicesActionPerformed

    private void ShowInvoicesWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ShowInvoicesWindowClosing
        DefaultTableModel dtm = (DefaultTableModel) tableInvoices.getModel();
        dtm.setRowCount(0);
        ShowInvoices.dispose();
    }//GEN-LAST:event_ShowInvoicesWindowClosing

    private void WelcomePanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_WelcomePanelComponentShown
        int totalItems = getTotalItems();
        int totalProduct = getTotalProducts();
        int totalCategories = getTotalCategories();
        int totalInventoryValue = getTotalInventoryValue();
        txtTotalItem.setText(String.valueOf(totalItems));        
        txtTotalProduct.setText(String.valueOf(totalProduct));
        txtTotalCategoies.setText(String.valueOf(totalCategories));
        txtInventoryalue.setText(String.valueOf(totalInventoryValue));


        //System.out.print("hello");
    }//GEN-LAST:event_WelcomePanelComponentShown

    private void contactDeveloperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactDeveloperActionPerformed
        DeveloperInfo.setVisible(true);
    }//GEN-LAST:event_contactDeveloperActionPerformed

    private void resetModifyFields() {
        txtModifyProdPricePrev.setText("");
        txtModifyProdPrice.setText("");
        txtModifyProdQuantityPrev.setText("");
        txtModifyProdQuantity.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            MainFrame f = new MainFrame();
            f.setVisible(true);
            f.setLocationRelativeTo(null);
        });
    }
    //User name 
    private String userName;
    private boolean isAdmin = false;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AccountSetting;
    private javax.swing.JPanel AddCategoryPanel;
    private javax.swing.JPanel AddItemInventoryPanel;
    private javax.swing.JPanel AddItemsPanel;
    private javax.swing.JDialog AddNewUser;
    private javax.swing.JPanel AddNewUserPanel;
    private javax.swing.JPanel AddProductPanel;
    private javax.swing.JPanel AddProductTabPanel;
    private javax.swing.JPanel BillPanel;
    private javax.swing.JPanel Billing;
    private javax.swing.JDialog BillingMenu;
    private javax.swing.JDialog ChangePassword;
    private javax.swing.JPanel ChangePasswordPanel;
    private javax.swing.JDialog DeveloperInfo;
    private javax.swing.JPanel DeveloperInfoPanel;
    private javax.swing.JPanel HomePage;
    private javax.swing.JPanel InventoryOverview;
    private javax.swing.JPanel LoginPage;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JPanel ModifyItemsPanel;
    private javax.swing.JPanel ModifyProductPanel;
    private javax.swing.JDialog PrintMenu;
    private javax.swing.JPanel PrintPanel;
    private javax.swing.JDialog RemoveUser;
    private javax.swing.JPanel RemoveUserPanel;
    private javax.swing.JScrollPane ScrollPaneShowInventory;
    private javax.swing.JPanel ShowInventoryPanel;
    private javax.swing.JPanel ShowInvoicePanel;
    private javax.swing.JDialog ShowInvoices;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JPanel WelcomePanel;
    private javax.swing.JButton btnAddCategory;
    private javax.swing.JButton btnAddItemInventoryAdd;
    private javax.swing.JButton btnAddItemInventoryCanel;
    private javax.swing.JButton btnAddNewUser;
    private javax.swing.JButton btnAddProdCanel;
    private javax.swing.JButton btnAddProdItem;
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnAddUserCancel;
    private javax.swing.JButton btnBillAddItem;
    private javax.swing.JButton btnBillPrint;
    private javax.swing.JButton btnCancelCategory;
    private javax.swing.JButton btnCancelNewPassword;
    private javax.swing.JButton btnChangeNewPassword;
    private javax.swing.JButton btnChangePassword;
    private javax.swing.JButton btnClearShowInventoryTable;
    private javax.swing.JButton btnDeleteItemFromBill;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnModifyProdCanel;
    private javax.swing.JButton btnModifyProdItem;
    private javax.swing.JButton btnNewBill;
    private javax.swing.JButton btnPrintBillPreview;
    private javax.swing.JButton btnPrintShowInventory;
    private javax.swing.JButton btnRemoveUser;
    private javax.swing.JButton btnRemoveUserCancel;
    private javax.swing.JButton btnRemoveUserGo;
    private javax.swing.JButton btnSearchShowInventory;
    private javax.swing.JButton btnShowAllInventory;
    private javax.swing.JButton btnShowInvoices;
    private javax.swing.JCheckBox cbAddItemInventory;
    private javax.swing.JComboBox<String> comboBoxAddItemInventory;
    private javax.swing.JComboBox<String> comboBoxBillCategoryName;
    private javax.swing.JComboBox<String> comboBoxBillProductName;
    private javax.swing.JComboBox<String> comboBoxCategory;
    private javax.swing.JComboBox<String> comboBoxCategoryAddItem;
    private javax.swing.JComboBox<String> comboBoxCategoryModify;
    private javax.swing.JComboBox<String> comboBoxProductModify;
    private javax.swing.JComboBox<String> comboBoxSelectPayment;
    private javax.swing.JComboBox<String> comboBoxShowInventory;
    private javax.swing.JComboBox<String> comboBoxUserList;
    private javax.swing.JMenuItem contactDeveloper;
    private javax.swing.JMenuItem exitMenuBtn;
    private javax.swing.JMenu firstMenuOption;
    private javax.swing.JPopupMenu.Separator firstMenuSeprator;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel labelAddCategoryName;
    private javax.swing.JLabel labelAddItemInventoryCategory;
    private javax.swing.JLabel labelAddItemInventoryLogo;
    private javax.swing.JLabel labelAddItemInventoryName;
    private javax.swing.JLabel labelAddItemInventoryPrice;
    private javax.swing.JLabel labelAddItemInventoryQuantity;
    private javax.swing.JLabel labelAddNewCat;
    private javax.swing.JLabel labelAddProdCategory;
    private javax.swing.JLabel labelAddProdName;
    private javax.swing.JLabel labelAddProdPrice;
    private javax.swing.JLabel labelAddProdQuantity;
    private javax.swing.JLabel labelAddProductLogo;
    private javax.swing.JLabel labelBillAmount;
    private javax.swing.JLabel labelBillCategoryName;
    private javax.swing.JLabel labelBillPrice;
    private javax.swing.JLabel labelBillProductName;
    private javax.swing.JLabel labelBillQuantity;
    private javax.swing.JLabel labelBillTotalAmount;
    private javax.swing.JLabel labelCategory;
    private javax.swing.JLabel labelCategoryAddItem;
    private javax.swing.JLabel labelCategoryModify;
    private javax.swing.JLabel labelConfirmPassword;
    private javax.swing.JLabel labelCustomerName;
    private javax.swing.JLabel labelDeveloperName;
    private javax.swing.JLabel labelErrorAddCategory;
    private javax.swing.JLabel labelErrorAddItemInventoryPrice;
    private javax.swing.JLabel labelErrorAddItemInventoryQuantity;
    private javax.swing.JLabel labelErrorAddNewUser;
    private javax.swing.JLabel labelErrorAddProdPrice;
    private javax.swing.JLabel labelErrorAddProdQuantity;
    private javax.swing.JLabel labelErrorChangePassword;
    private javax.swing.JLabel labelErrorConfirmPassAddUser;
    private javax.swing.JLabel labelErrorConfirmPassword;
    private javax.swing.JLabel labelErrorLogin;
    private javax.swing.JLabel labelErrorNewPassword;
    private javax.swing.JLabel labelErrorNotMuchQuantity;
    private javax.swing.JLabel labelErrorOldPassword;
    private javax.swing.JLabel labelErrorPriceModifyItem;
    private javax.swing.JLabel labelErrorQuantityModifyItem;
    private javax.swing.JLabel labelInventoryValue;
    private javax.swing.JLabel labelLogin;
    private javax.swing.JLabel labelLogo;
    private javax.swing.JLabel labelLogoShowInventory;
    private javax.swing.JLabel labelLogoWelcome;
    private javax.swing.JLabel labelModifyItems;
    private javax.swing.JLabel labelModifyProdCategory;
    private javax.swing.JLabel labelModifyProdName;
    private javax.swing.JLabel labelModifyProdPrice;
    private javax.swing.JLabel labelModifyProdPricePrev;
    private javax.swing.JLabel labelModifyProdQuantity;
    private javax.swing.JLabel labelModifyProdQuantityPrev;
    private javax.swing.JLabel labelNewPassword;
    private javax.swing.JLabel labelNewUserConfirmPassword;
    private javax.swing.JLabel labelNewUserContactNumber;
    private javax.swing.JLabel labelNewUserPassword;
    private javax.swing.JLabel labelOldPassword;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelPaymentMode;
    private javax.swing.JLabel labelSelectCategoryShowInventory;
    private javax.swing.JLabel labelSelectUserRemove;
    private javax.swing.JLabel labelTotalCategories;
    private javax.swing.JLabel labelTotalItem;
    private javax.swing.JLabel labelTotalProduct;
    private javax.swing.JLabel labelUserName;
    private javax.swing.JLabel lableNewUserName;
    private javax.swing.JMenuItem logoutMenuBtn;
    private javax.swing.JMenu secondMenuOption;
    private javax.swing.JTable tableBill;
    private javax.swing.JTable tableInvoices;
    private javax.swing.JTable tableShowInventory;
    private javax.swing.JTextArea textAreaDeveloperInformation;
    private javax.swing.JTextField txtAddCategoryName;
    private javax.swing.JTextField txtAddItemInventoryCategory;
    private javax.swing.JTextField txtAddItemInventoryPrice;
    private javax.swing.JTextField txtAddItemInventoryQuantity;
    private javax.swing.JTextField txtAddProdCategory;
    private javax.swing.JTextField txtAddProdName;
    private javax.swing.JTextField txtAddProdPrice;
    private javax.swing.JTextField txtAddProdQuantity;
    private javax.swing.JTextArea txtAreaBillPreview;
    private javax.swing.JTextField txtBillAmount;
    private javax.swing.JTextField txtBillPrice;
    private javax.swing.JSpinner txtBillQuantitySpinner;
    private javax.swing.JTextField txtBillTotalAmount;
    private javax.swing.JTextField txtConfirmPassword;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtInventoryalue;
    private javax.swing.JTextField txtLoginName;
    private javax.swing.JTextField txtModifyProdCategory;
    private javax.swing.JTextField txtModifyProdPrice;
    private javax.swing.JTextField txtModifyProdPricePrev;
    private javax.swing.JTextField txtModifyProdQuantity;
    private javax.swing.JTextField txtModifyProdQuantityPrev;
    private javax.swing.JPasswordField txtNewPassword;
    private javax.swing.JTextField txtNewUserConfirmPassword;
    private javax.swing.JTextField txtNewUserContact;
    private javax.swing.JTextField txtNewUserName;
    private javax.swing.JPasswordField txtNewUserPassword;
    private javax.swing.JPasswordField txtOldPassword;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtTotalCategoies;
    private javax.swing.JTextField txtTotalItem;
    private javax.swing.JTextField txtTotalProduct;
    private javax.swing.JMenuItem versionInfo;
    // End of variables declaration//GEN-END:variables

    private void resetTxtAddProd() {
        comboBoxCategory.setSelectedIndex(0);
        //txtAddProdCategory.setText("");       
        txtAddProdName.setText("");
        txtAddProdPrice.setText("");
        txtAddProdQuantity.setText("");
        //AddProductPanel.setVisible(false);
    }

    private void resetAddInventoryFields() {
        txtAddItemInventoryPrice.setText("");
        txtAddItemInventoryQuantity.setText("");
    }

    private void checkAdmin() {
        if (isAdmin) {
            btnAddNewUser.setEnabled(true);
            btnRemoveUser.setEnabled(true);
        } else {
            btnAddNewUser.setEnabled(false);
            btnRemoveUser.setEnabled(false);
        }
    }

    private void clearAllCategoryComboBoxs() {
        comboBoxCategory.removeAllItems();
        comboBoxCategoryModify.removeAllItems();
        comboBoxCategoryAddItem.removeAllItems();
        comboBoxShowInventory.removeAllItems();
        comboBoxBillCategoryName.removeAllItems();
        comboBoxCategory.addItem("Select Item");
        comboBoxCategoryModify.addItem("Select Item");
        comboBoxCategoryAddItem.addItem("Select Item");
        comboBoxShowInventory.addItem("Select Item");
        comboBoxBillCategoryName.addItem("Select Item");
    }

    private void genrateBill() {
        txtAreaBillPreview.setText("");
        String cusName = txtCustomerName.getText();
        LocalDateTime now = LocalDateTime.now();
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm");
        String date = dtf.format(now);
        String amount = txtBillTotalAmount.getText();
        String paymentMode = String.valueOf(comboBoxSelectPayment.getSelectedItem());
        SQLQueries.storeInvoice(amount, cusName, date);
        int invoice = SQLQueries.getInvoiceNumber();
        txtAreaBillPreview.append("=============================================================\n");
        txtAreaBillPreview.append("============Lucky Furniture and Handloom Store===============\n");
        txtAreaBillPreview.append("=============================================================\n");
        txtAreaBillPreview.append("Customer Name : " + cusName + "\t\t Date : " + date + " \n");
        txtAreaBillPreview.append("Invoice Number : " + invoice + "\t\t Payement Mode : " + paymentMode + "\n");

        txtAreaBillPreview.append("=============================================================\n");
        txtAreaBillPreview.append("Sr\t Product Name\t\t Qty\t Rate \t Amount\n");
        txtAreaBillPreview.append("=============================================================\n");
        for (int i = 0; i < tableBill.getRowCount(); i++) {
            String sr = String.valueOf(tableBill.getValueAt(i, 0));
            String p_name = String.valueOf(tableBill.getValueAt(i, 1));
            char[] array = new char[20 - p_name.length()];
            Arrays.fill(array, ' ');
            //String spaces = new String(new char[20-p_name.length()]).replace('\0', ' ');
            p_name += new String(array);
            String quantity = String.valueOf(tableBill.getValueAt(i, 2));
            String rate = String.valueOf(tableBill.getValueAt(i, 3));
            String total = String.valueOf(tableBill.getValueAt(i, 4));
            SQLQueries.removeItemFromInventory(p_name, quantity);
            txtAreaBillPreview.append(sr + "  \t" + p_name + "\t" + quantity + "\t" + rate + "\t" + total + "\n");
        }
        txtAreaBillPreview.append("=============================================================\n");
        txtAreaBillPreview.append("=====================================Total Amount : " + amount + "\n");
        txtAreaBillPreview.append("=============================================================\n");
        PrintMenu.setVisible(true);
        clearBill();
    }

    private void clearBill() {
        txtBillTotalAmount.setText("");
        txtCustomerName.setText("");
        txtBillAmount.setText("");
        txtBillQuantitySpinner.setValue(0);
        DefaultTableModel dtm = (DefaultTableModel) tableBill.getModel();
        dtm.setRowCount(0);
        BillingMenu.dispose();
    }

    private void auth() {
        String tempPass = txtPassword.getText();
        String tempName = txtLoginName.getText();
        boolean[] res = SQLQueries.Authentication(tempName, tempPass);
        if (!res[0]) {
            labelErrorLogin.setText("Invalid Credentials !");
        } else {
            isAdmin = res[1];
            userName = tempName;
            LoginPage.setVisible(false);
            HomePage.setVisible(true);
            labelUserName.setText(userName);
            checkAdmin();
        }
    }

    private void cleanRemoveUser() {
        comboBoxUserList.removeAllItems();
        RemoveUser.dispose();
    }

    private int getTotalItems() {
        int value = 0;
        try {
            ResultSet rs = SQLQueries.getTotalItems();
            value = Integer.parseInt(rs.getString(1));
        } catch (SQLException se) {
            System.out.println(se.getMessage());
        }
        return value;
    }

    private int getTotalProducts() {
        int value = 0;
        try {
            ResultSet rs = SQLQueries.getTotalProducts();
            value = Integer.parseInt(rs.getString(1));
        } catch (SQLException se) {
            System.out.println(se.getMessage());
        }
        return value;
    }

    private int getTotalCategories() {
        int value = 0;
        try {
            ResultSet rs = SQLQueries.getTotalCategories();
            value = Integer.parseInt(rs.getString(1));
        } catch (SQLException se) {
            System.out.println(se.getMessage());
        }
        return value;
    }

    private int getTotalInventoryValue() {
        int value = 0;
        try {
            ResultSet rs = SQLQueries.getInventoryValue();
            value = Integer.parseInt(rs.getString(1));
        } catch (SQLException se) {
            System.out.println(se.getMessage());
        }
        return value;
    }
}
